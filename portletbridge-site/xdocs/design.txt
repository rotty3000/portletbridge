design:

1. httpclient setup and config
	- should this be stored in jndi instead?
	- i'll put it into the portlet for now to make it self contained

2. content rewriting
	- what about portlet styles
		- ignore
		- leave it up to the xslt
	- cooerce forms to being PUT's instead of GET's?

3. title
	- how do we get to the title of the portlet
		- jxpath
		- part of the xslt
		- just a string
		- default to the <title></title>

4. window state
	- normal vs. max - should we distinguish?

5. xsl
	- one style per window state?
	- where do we store/get the styles from?

6. url rewriting
	- worry about max length
	- form urls to be action urls?
	- regular urls to be render urls?
	- host restrictions (what do we do about outside urls? target = new?)

7. what about proxying things like images/css/javascript etc.? (use the proxy servlet?)

8. the portletbridge servlet
	- how does it use the same httpclient as the portlet? application scope?
		- consider having a httpclient servlet that puts httpclient or the
		  like into the application context?

9. etc.

10. sequence of events

portlet render method is called
	portlet loads up
	portlet gets state and calls url
	portlet filters and outputs results
	what happens when we have a post url...
		- cache it?
		- repost (where do you get the post details from?)
		- bomb out?

servlet is called
	servlet gets state
	servlet gets content (e.g. image) and outputs it

portlet and servlet need to share state
portlet and servlet could share httpclient

portlet can't forward all requests to the servlet 
	- can't do rewriting properly
	- no control over redirects etc.

portlet and servlet share httpsession
	- state can be stored there
	- state should be scoped by portlet

how to handle credentials
	- portlet has credentials and logs in
		- probably only a single set of credentials
	- portlet uses portal username to log in
		- needs to find a way to map (how does it get the password?)
	- portlet forces the user to log in
	- portlet uses the edit to get the user to log in?

portlet processAction vs. render:

render
	- checks for attribute from processAction
		- if it finds it it outputs the result
		- if it doesn't find it
			- if there's url it goes and gets it and outputs
			- otherwise it uses the initialUrl


processAction
	- goes and gets it, checks the content type
		- if it's html it puts it into an attribute and sets the render url
		- if it's not, it doesn't set the parameter (will the old one still exist?)
		  and then it does a redirect

should we worry about streaming (putting a streamsource into the attribute?)

think about all the stuff that should be preferences / readonly preferences / init params etc.
what should be config and what should be "edit"


11. rewriting

current url:

http://host.com/root/

relative

test --> http://host.com/root/test
test/test.gif --> http://host.com/root/test/test.gif
../test --> http://host.com/root/../test

absolute

/test --> http://host.com/test
/test/test.gif --> http://host.com/test/test.gif

full

http://otherhost.com/ --> http://otherhost.com/

--- base url issue to be resolved ---

done.

other rewriting rules:

forms
	get's to posts

urls
	a,form,area --> rewrite to portlet
	link,img,input,embed,xml,script --> rewrite to servlet

frames
	blow up

stylesheets
	consider dropping styles
	consider adding styles

html/head/body
	consider dropping as standard

titles
	ponder this (i.e. should the portlet title be the title of the underlying page?)
	no for now.


