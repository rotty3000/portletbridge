<project default="portletbridge:dist" 
		 xmlns:j="jelly:core" 
		 xmlns:u="jelly:util"
		 xmlns:maven="jelly:maven"
         xmlns:ant="jelly:ant">
         
  <postGoal name="xdoc:register-reports"> 
    <attainGoal name="maven-linkcheck-plugin:deregister"/> 
    <attainGoal name="maven-checkstyle-plugin:deregister"/> 
  </postGoal>

  <postGoal name="xdoc">
    <attainGoal name="portletbridge:copystyles"/>
  </postGoal>

  <goal name="portletbridge:copystyles"> 
    <copy todir="${maven.docs.dest}\style" overwrite="true">
      <fileset dir="${maven.docs.src}\style"/>
    </copy>
  </goal>

  <goal name="nodepsclean">
  	<echo>"cleaning projects"</echo>
    <delete includeEmptyDirs="true">
     <fileset dir="${basedir}/.." includes="portletbridge-core/target/**"/>
     <fileset dir="${basedir}/.." includes="portletbridge-web/target/**"/>
     <fileset dir="${basedir}/.." includes="portletbridge-site/target/**"/>
     <fileset dir="${basedir}/.." includes="portletbridge-portlet/target/**"/>
   </delete>
  </goal>

  <goal name="portletbridge:dist" prereqs="nodepsclean,multiproject:install,multiproject:site,dist:build-bin">
  </goal>

  <postGoal name="dist:prepare-bin-filesystem">
    <echo>[portletbridge] dist:prepare-bin-filesystem postGoal</echo>
    <attainGoal name="portletbridge:copyartifacts"/>
    <!-- delete the portletbridge-site jar -->
    <delete file="${maven.dist.bin.assembly.dir}/${maven.final.name}.jar"/>
  </postGoal>
  
  <goal name="portletbridge:copyartifacts">

      <ant:echo>Gathering project list</ant:echo>
      <maven:reactor
        basedir="${maven.multiproject.basedir}"
        banner="Gathering project list"
        includes="${maven.multiproject.includes}"
        excludes="${maven.multiproject.excludes}"
        postProcessing="true"
        collectOnly="true"
        collectionVar="multiprojects"
        ignoreFailures="${maven.multiproject.ignoreFailures}"
      />

      <maven:reactor
        basedir="${maven.multiproject.basedir}"
        banner="Building project src dist"
        postProcessing="true"
        projectList="${multiprojects}"
        goals="dist:build-src"
        ignoreFailures="${maven.multiproject.ignoreFailures}"
      />

      <echo>Now copying from reactor projects: ${multiprojects}</echo>

      <!-- copy each project over into ${maven.docs.dest} -->
      <j:forEach var="reactorProject" items="${multiprojects}">
        <!-- note this is the same name as is generated in the navigation-aggregate.xml -->

        <j:set var="directory" value="${pom.getPluginContext('maven-dist-plugin').getVariable('maven.dist.bin.assembly.dir')}"/>
        <mkdir dir="${directory}"/>
        <echo>Directory: ${directory}</echo>
        <!--
        ${reactorProject.name} has a target
        ${reactorProject.context.getVariable('maven.build.dir')}\artifact
        needing to be copied
        -->
        <j:set var="projectType" value="${reactorProject.context.getVariable('maven.multiproject.type')}"/>
        <j:set var="fromFile" value="${reactorProject.context.getVariable('maven.build.dir')}/${reactorProject.context.getVariable('maven.final.name')}.${projectType}"/>
        <j:if test="${projectType == 'war'}">
	        <j:set var="fromFile" 
	          value="${reactorProject.context.getVariable('maven.build.dir')}/${reactorProject.context.getVariable('maven.war.final.name')}"/>
        </j:if>

        <echo>Copying ${fromFile}</echo>

        <copy toDir="${directory}">
          <fileset file="${fromFile}"/>
        </copy>
        
        <copy toDir="${directory}">
          <fileset dir="${reactorProject.context.getVariable('maven.build.dir')}/distributions"/>
        </copy>
      </j:forEach>
  </goal>

</project>
